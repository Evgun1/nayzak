version: "3.5"

services:
    postgres:
        container_name: postgres
        image: postgres:16-alpine
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            PGDATA: /data/postgres
        volumes:
            - ./postgres:/var/lib/postgresql/data
        ports:
            - "5456:5432"
        networks:
            - nayzak
        restart: unless-stopped
    pgadmin:
        container_name: pg-admin
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        volumes:
            - ./pgadmin:/var/lib/pgadmin
        ports:
            - "5055:80"
        networks:
            - nayzak
        restart: unless-stopped
        user: "${UID}:${GID}"
    redis:
        image: redis:7.2
        container_name: redis
        environment:
            REDIS_PASSWORD: ${REDIS_PASSWORD}
            REDIS_DATABASES: ${REDIS_DATABASES}
        ports:
            - "5454:6379"
        volumes:
            - ./redis:/var/lib/redis/data
        command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
        networks:
            - nayzak
        restart: unless-stopped
    # zookeeper:
    #     image: wurstmeister/zookeeper:3.4.6
    #     container_name: zookeeper
    #     environment:
    #       ZOOKEEPER_LISTENER_PORT: 2181
    #     ports:
    #       - "2181:2181"
    #     volumes:
    #         - ./zookeeper:/zookeeper/data
    #     networks:
    #         - nayzak
    #     restart: unless-stopped
    # kafka:
    #     image: wurstmeister/kafka:latest
    #     container_name: kafka
    #     environment:


    #         KAFKA_BROKER_ID: 1
    #         KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    #         # KAFKA_LISTENER_SECURITY_PROTOCOL_EXTERNAL: PLAINTEXT
    #         # KAFKA_ADVERTISED_HOST_NAME: localhost        


    #         # KAFKA_LISTENER_NAME_INTERNAL: INSIDE-KAFKA
    #         # KAFKA_LISTENER_PORT_INTERNAL: 9093
    #         # KAFKA_LISTENER_INTERNAL: INSIDE-KAFKA://0.0.0.0:9093
    #         # KAFKA_ADVERTISED_LISTENER: INSIDE-KAFKA:9093
    #         # KAFKA_LISTENER: INSIDE-KAFKA://0.0.0.0:9093

    #         # KAFKA_LISTENER_NAME_EXTERNAL: EXTERNAL-KAFKA
    #         # KAFKA_LISTENER_PORT_EXTERNAL: 9092
    #         # KAFKA_ADVERTISED_LISTENER_PORT_EXTERNAL: 9092
    #         # KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT

          

    #     ports:
    #         - "9092:9092"
    #         - "9093:9093"

    #     depends_on:
    #         - zookeeper
    #     volumes:
    #         - ./kafka:/kafka/data
    #     networks:
    #         - nayzak
    #     restart: unless-stopped
    

    kafka-broker-0:
        image: bitnami/kafka:latest
        container_name: kafka-broker-0
        ports:
            - "9092:9092"
        environment:
              KAFKA_KRAFT_CLUSTER_ID: sdgfwets8f7as0dgjid78fg09iojSD
              KAFKA_CFG_NODE_ID: 0
              KAFKA_CFG_PROCESS_ROLES: controller,broker
              KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-broker-0:9093
              
              KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
              KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
              KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
              KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
              KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        volumes:
            - ./kafka-broker-0:/kafka-broker-0/data
        networks:
            - nayzak
        restart: unless-stopped
    kafka-ui:
        container_name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        ports:
          - 9090:8080
        environment:
          DYNAMIC_CONFIG_ENABLED: 'true'
          KAFKA_CLUSTERS_0_NAME: nayzak
          KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 0.0.0.0:9092
        volumes:
          - ./kafkaui:/kafkaui/data

        depends_on:
            - kafka-broker-0
        restart: unless-stopped

    
    nginx:
        image: nginx:latest
        container_name: nginx
        ports:
            - "8080:8080"
            # - "443:443"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            # - ./nginx:/etc/nginx/conf.d
            # - ./certs:/etc/ssl/certs
            # - ./certs/private:/etc/ssl/private
        networks:
            - nayzak
        restart: unless-stopped
    mongo: 
        container_name: mongo 
        image: mongo
        restart: unless-stopped
        ports: 
            - "5057:27017"
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
        networks:
            - nayzak
        volumes:
            - ./mongo:/var/lib/mongo/data

networks:
    nayzak:
        driver: bridge
