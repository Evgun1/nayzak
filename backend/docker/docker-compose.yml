version: "3.5"

services:
    postgres:
        container_name: postgres
        image: postgres:16-alpine
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            PGDATA: /data/postgres
        volumes:
            - ./postgres:/var/lib/postgresql/data
        ports:
            - "5456:5432"
        networks:
            - nayzak
        restart: unless-stopped
    pgadmin:
        container_name: pg-admin
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        volumes:
            - ./pgadmin:/var/lib/pgadmin
        ports:
            - "5055:80"
        networks:
            - nayzak
        restart: unless-stopped
        user: "${UID}:${GID}"
    redis:
        image: redis:7.2
        container_name: redis
        environment:
            REDIS_PASSWORD: ${REDIS_PASSWORD}
            REDIS_DATABASES: ${REDIS_DATABASES}
        ports:
            - "5454:6379"
        volumes:
            - ./redis:/var/lib/redis/data
        command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
        networks:
            - nayzak
        restart: unless-stopped
    kafka-controller-1:
        image: apache/kafka:latest
        container_name: kafka-controller-1
        environment:
          KAFKA_CLUSTER_ID: hnfvgbjmfvcgbhndcgbfvhgbjmkbjmkhn
          KAFKA_NODE_ID: 1
          KAFKA_PROCESS_ROLES: controller
          KAFKA_LISTENERS: CONTROLLER://:9093
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093
        networks:
            - nayzak
        volumes:
          - ./kafka-controllers:/kafka-controller-1/var/lib/kafka/data
        restart: unless-stopped
    kafka-controller-2:
        image: apache/kafka:latest
        container_name: kafka-controller-2
        environment:
          KAFKA_CLUSTER_ID: afhEJTTTTTTJjasrjJphjSADAHl
          KAFKA_NODE_ID: 2
          KAFKA_PROCESS_ROLES: controller
          KAFKA_LISTENERS: CONTROLLER://:9093
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093
        networks:
            - nayzak
        volumes:
          - ./kafka-controllers:/kafka-controller-2/var/lib/kafka/data
        restart: unless-stopped
    kafka-broker-1:
        image: apache/kafka:latest
        container_name: kafka-broker-1
        ports:
          - 29092:9092
        environment:
          KAFKA_CLUSTER_ID: jmlkxcvZojmklsfvadcomkplsdcfvgaz
          KAFKA_NODE_ID: 3
          KAFKA_PROCESS_ROLES: broker
          KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
          KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker-1:19092,PLAINTEXT_HOST://localhost:29092'
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        depends_on:
          - kafka-controller-1
          - kafka-controller-2
        networks:
            - nayzak
        volumes:
            - ./kafka-brokers:/kafka-broker-1/var/lib/kafka/data
        restart: unless-stopped
    kafka-broker-2:
        image: apache/kafka:latest
        container_name: kafka-broker-2
        ports:
          - 39092:9092
        environment:
          KAFKA_CLUSTER_ID: asdasdfrhwrhaetjadgjfahsdatheaheVCS
          KAFKA_NODE_ID: 4
          KAFKA_PROCESS_ROLES: broker
          KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
          KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker-2:19092,PLAINTEXT_HOST://localhost:39092'
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        depends_on:
          - kafka-controller-1
          - kafka-controller-2
        networks:
            - nayzak
        volumes:
            - ./kafka-brokers:/kafka-broker-2/var/lib/kafka/data
        restart: unless-stopped
    kafka-ui:
        container_name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        ports:
          - 8081:8080
        environment:
          DYNAMIC_CONFIG_ENABLED: 'true'
     
        networks:
            - nayzak
        depends_on:
            - kafka-broker-1
            - kafka-broker-2

        volumes:
            - ./kafka-ui:/kafka-ui/var/lib/kafka-ui/data
        restart: unless-stopped

    
    nginx:
        image: nginx:latest
        container_name: nginx
        ports:
            - "8080:8080"
            # - "443:443"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            # - ./nginx:/etc/nginx/conf.d
            # - ./certs:/etc/ssl/certs
            # - ./certs/private:/etc/ssl/private
        networks:
            - nayzak
        restart: unless-stopped
    mongo: 
        container_name: mongo 
        image: mongo
        restart: unless-stopped
        ports: 
            - "5057:27017"
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
        networks:
            - nayzak
        volumes:
            - ./mongo:/var/lib/mongo/data

networks:
    nayzak:
        driver: bridge



# kafka-broker-0:
    #     image: bitnami/kafka:latest
    #     container_name: kafka-broker-0
    #     ports:
    #         - "9092:9092"
    #     environment:
    #           KAFKA_KRAFT_CLUSTER_ID: sdgfwets8f7as0dgjid78fg09iojSD
    #           KAFKA_CFG_NODE_ID: 0
    #           KAFKA_CFG_PROCESS_ROLES: controller,broker
    #           KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-broker-0:9093
              
    #           KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
    #           KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    #           KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
    #           KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
    #           KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    #     volumes:
    #         - ./kafka-broker-0:/kafka-broker-0/data
    #     networks:
    #         - nayzak
    #     restart: unless-stopped