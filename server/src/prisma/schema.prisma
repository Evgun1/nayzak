generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model Categories {
  id          Int             @id @default(autoincrement())
  title       String          @db.VarChar(255)
  Products    Products[]
  Subcategory Subcategories[]
}

model Subcategories {
  id          Int         @id @default(autoincrement())
  title       String      @db.VarChar(255)
  category_id Int?
  Products    Products[]
  categories  Categories? @relation(fields: [category_id], references: [id])
}

model Brands {
  id       Int        @id @default(autoincrement())
  title    String     @db.VarChar(255)
  Products Products[]
}

model Products {
  id             Int            @id @default(autoincrement())
  title          String         @db.VarChar(255)
  description    String
  price          Int
  discount       Int
  mainPrice      Int
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  status         String         @default("in stock") @db.VarChar(20)
  category_id    Int?
  subcategory_id Int?
  brand_id       Int?
  Cart           Cart[]
  Orders         Orders[]
  brand          Brands?        @relation(fields: [brand_id], references: [id])
  category       Categories?    @relation(fields: [category_id], references: [id])
  subcategory    Subcategories? @relation(fields: [subcategory_id], references: [id])
  Reviews        Reviews[]
  Wishlist       Wishlist[]
}

model Cart {
  id         Int       @id @default(autoincrement())
  user_token String
  amount     Int
  product_id Int?
  product    Products? @relation(fields: [product_id], references: [id])
}

model Wishlist {
  id         Int       @id @default(autoincrement())
  user_token String
  product_id Int?
  product    Products? @relation(fields: [product_id], references: [id])
}

model Users {
  id       Int       @id @default(autoincrement())
  login    String    @unique @db.VarChar(255)
  email    String    @unique @db.VarChar(255)
  password String
  role     String    @default("user") @db.VarChar(20)
  Orders   Orders[]
  Reviews  Reviews[]
}

model Reviews {
  id         Int      @id @default(autoincrement())
  rating     Int      @default(0)
  text       String?
  user_id    Int?
  product_id Int
  product    Products @relation(fields: [product_id], references: [id])
  user       Users?   @relation(fields: [user_id], references: [id])
}

model Orders {
  id         Int       @id @default(autoincrement())
  amount     Int
  price      Int
  status     String    @default("in progres") @db.VarChar(50)
  user_id    Int?
  product_id Int?
  product    Products? @relation(fields: [product_id], references: [id])
  user       Users?    @relation(fields: [user_id], references: [id])
}
